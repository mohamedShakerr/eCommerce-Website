package org.iti.db.domain;// default package
// Generated Mar 23, 2021, 6:50:21 PM by Hibernate Tools 6.0.0.Alpha2


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Orders generated by hbm2java
 */
@Entity
@Table(name = "orders"
        , catalog = "ecomm"
)
public class Orders implements java.io.Serializable {


    private Integer orderId;
    private Customers customers;
    private Date date;
    private Set<Payments> paymentses = new HashSet<Payments>(0);
    private Set<OrderItems> orderItemses = new HashSet<OrderItems>(0);

    public Orders() {
    }

    public Orders(Customers customers, Date date, Set<Payments> paymentses, Set<OrderItems> orderItemses) {
        this.customers = customers;
        this.date = date;
        this.paymentses = paymentses;
        this.orderItemses = orderItemses;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)


    @Column(name = "order_id", unique = true, nullable = false)
    public Integer getOrderId() {
        return this.orderId;
    }

    public void setOrderId(Integer orderId) {
        this.orderId = orderId;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "customer_id")
    public Customers getCustomers() {
        return this.customers;
    }

    public void setCustomers(Customers customers) {
        this.customers = customers;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "date", length = 19)
    public Date getDate() {
        return this.date;
    }

    public void setDate(Date date) {
        this.date = date;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "orders")
    public Set<Payments> getPaymentses() {
        return this.paymentses;
    }

    public void setPaymentses(Set<Payments> paymentses) {
        this.paymentses = paymentses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "orders")
    public Set<OrderItems> getOrderItemses() {
        return this.orderItemses;
    }

    public void setOrderItemses(Set<OrderItems> orderItemses) {
        this.orderItemses = orderItemses;
    }


}


